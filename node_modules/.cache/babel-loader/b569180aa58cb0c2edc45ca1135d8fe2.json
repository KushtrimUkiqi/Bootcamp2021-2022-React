{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\e-shop\\\\app\\\\src\\\\pages\\\\Products\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Products.css\";\nimport ItemList from '../../components/ItemList/ItemList';\nimport Select from '../../components/Select/Select';\nimport CheckBox from '../../components/CheckBox/CheckBox';\nimport InputSlider from '../../components/InputSlider/InputSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product() {\n  _s();\n\n  //id represents the category of the products to be displayed \n  const {\n    id\n  } = useParams(); //productsSizes represents an array of sizes for a particular category .\n  //example if the category is shoes , the array should be like :  [\"43\",\"44\",\"44\",\"45\"] ...\n  //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the relevant sizes. \n\n  const [productsSizes, setProductsSizes] = useState([\"xs\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]); //productsBrands represents an array of brands for a particular category .\n  //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the all the relevant brands. \n\n  const [productsBrands, setProductsBrands] = useState([\"Illyrian Bloodline\", \"KTM\", \"Zara\", \"Adidas\", \"Nike\", \"Code4Life\"]);\n  let productsColors = [\"White\", \"Purple\", \"Yellow\", \"Green\", \"Brown\", \"Orange\", \"Gray\", \"Blue\", \"Silver\", \"Red\", \"Black\"]; //productsOrder can be : standard , price ascending , price descending .\n  //@by default the value is set to be \"standard\";\n\n  const [productsOrder, setProductsOrder] = useState(\"standard\");\n  const productsOrderOptions = [{\n    value: \"standard\",\n    text: \"Standard\"\n  }, {\n    value: \"price_ascending\",\n    text: \"Price ascending\"\n  }, {\n    value: \"price_descending\",\n    text: \"Price descending\"\n  }];\n\n  const changeProductsOrder = val => setProductsOrder(val); //products number represents the number of the products that need to be displayed , the value can be 20, 30 or 40 .\n  // @By default the value is set to be 20\n\n\n  const [productsNumber, setProductsNumber] = useState(20);\n  const productsNumberOptions = [{\n    value: \"20\",\n    text: \"20\"\n  }, {\n    value: \"30\",\n    text: \"30\"\n  }, {\n    value: \"40\",\n    text: \"40\"\n  }];\n\n  const changeProductsNumber = val => setProductsNumber(val); //productsPreferredBrand represents an array of brands that are selected as preferred brands , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products from all the posssible brands.\n\n\n  const [productsPreferredBrand, setProductsPreferredBrand] = useState([]); //Function that sets/unsets the preferred brand/s\n\n  function toggleBrandPreferences(index) {} //productsPreferredBrand represents an array of colors that are selected as preferred colors , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible colors.\n\n\n  const [productsPreferredColor, setProductsPreferredColor] = useState([]); //Function that sets/unsets the preferred color/s\n\n  function toggleColorPreferences(index) {} //productsPriceRange represents an object wich contains the attributes : \"lowestPrice\" (for the lowest price that the products can be) and  \"highestPrice\" (for the highest price that the products can be).\n  //@By default the object has attributes that have values 0 each , in this situation we expect all the products \n\n\n  const [productsPriceRange, setProductsPriceRange] = useState({\n    lowestPrice: 0,\n    highestPrice: 999\n  }); //productsPreferedSizes represents an array of sizes that are selected as preferred sized , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible sizes.\n\n  const [productsPreferedSizes, setProductsPreferedSizes] = useState([]); //Function that sets/unsets the preferred size/s\n\n  function toggleSizePreferences(index) {}\n\n  const [filterTableDisplay, setFilterTableDisplay] = useState(false); //Function that closes all the options for filtering the products\n\n  function setAllFilterButtonsToFalse() {\n    setPbTableDisplay(false);\n    setPsTableDisplay(false);\n    setPcTableDisplay(false);\n  }\n\n  const [pbTableDisplay, setPbTableDisplay] = useState(false);\n  const [pcTableDisplay, setPcTableDisplay] = useState(false);\n  const [psTableDisplay, setPsTableDisplay] = useState(false); ////TODO : an api endpoint from the server side for fetching data\n\n  const getItems = () => [{\n    name: 'addidas shoe',\n    price: \"130$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FFV7957.jpg\",\n    description: {\n      short: 'shoe for these cold times',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }];\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"productBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"firstElement\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        labelText: \"Order by\",\n        onChangeFunction: e => changeProductsOrder(e.target.value),\n        name: \"sort\",\n        options: productsOrderOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelText: \"Display\",\n        onChangeFunction: e => changeProductsNumber(e.target.value),\n        name: \"display\",\n        options: productsNumberOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"secondElement\",\n      className: filterTableDisplay ? \"filterTable\" : \"filterTableNone\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filterOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputSlider, {\n          productsPriceRange: productsPriceRange,\n          ranges: {\n            min: 0,\n            max: 999\n          },\n          step: 5,\n          setPreferredLowestPrice: number => {\n            setProductsPriceRange({\n              lowestPrice: number,\n              highestPrice: productsPriceRange.highestPrice\n            });\n          },\n          setPreferredHighestPrice: number => {\n            setProductsPriceRange({\n              lowestPrice: productsPriceRange.lowestPrice,\n              highestPrice: 999 - number\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: pbTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"pbButton\",\n          onClick: () => {\n            setPbTableDisplay(!pbTableDisplay);\n          },\n          children: \"Preferred brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: psTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"psButton\",\n          onClick: () => {\n            setPsTableDisplay(!psTableDisplay);\n          },\n          children: \"Preferred sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: pcTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"pcButton\",\n          onClick: () => {\n            setPcTableDisplay(!pcTableDisplay);\n          },\n          children: \"Preferred colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"thirdElement\",\n      children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n        tableDisplay: pbTableDisplay,\n        productsX: productsBrands,\n        nameCheckBox: \"preferredBrands\",\n        onChangeCheckBox: index => toggleBrandPreferences(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        tableDisplay: psTableDisplay,\n        productsX: productsSizes,\n        nameCheckBox: \"preferredSizes\",\n        onChangeCheckBox: index => toggleSizePreferences(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        tableDisplay: pcTableDisplay,\n        productsX: productsColors,\n        nameCheckBox: \"preferredColors\",\n        onChangeCheckBox: index => toggleColorPreferences(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fourthElement\",\n      children: /*#__PURE__*/_jsxDEV(ItemList, {\n        items: getItems(),\n        gridcolumns: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Product, \"DdYZd8LetSW8BYR4oUK88Z4gVhQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Bootcamp/e-shop/app/src/pages/Products/Products.js"],"names":["React","useEffect","useState","useParams","ItemList","Select","CheckBox","InputSlider","Product","id","productsSizes","setProductsSizes","productsBrands","setProductsBrands","productsColors","productsOrder","setProductsOrder","productsOrderOptions","value","text","changeProductsOrder","val","productsNumber","setProductsNumber","productsNumberOptions","changeProductsNumber","productsPreferredBrand","setProductsPreferredBrand","toggleBrandPreferences","index","productsPreferredColor","setProductsPreferredColor","toggleColorPreferences","productsPriceRange","setProductsPriceRange","lowestPrice","highestPrice","productsPreferedSizes","setProductsPreferedSizes","toggleSizePreferences","filterTableDisplay","setFilterTableDisplay","setAllFilterButtonsToFalse","setPbTableDisplay","setPsTableDisplay","setPcTableDisplay","pbTableDisplay","pcTableDisplay","psTableDisplay","getItems","name","price","image","description","short","details","e","target","min","max","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useEffect,useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./Products.css\";\r\nimport ItemList from '../../components/ItemList/ItemList';\r\nimport Select from '../../components/Select/Select';\r\nimport CheckBox from '../../components/CheckBox/CheckBox';\r\nimport InputSlider from '../../components/InputSlider/InputSlider';\r\nexport default function Product() {\r\n    \r\n    //id represents the category of the products to be displayed \r\n    const {id} = useParams();\r\n\r\n    //productsSizes represents an array of sizes for a particular category .\r\n    //example if the category is shoes , the array should be like :  [\"43\",\"44\",\"44\",\"45\"] ...\r\n    //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the relevant sizes. \r\n    const [productsSizes,setProductsSizes] = useState([\"xs\",\"s\",\"m\",\"l\",\"xl\",\"xxl\"]);\r\n\r\n     //productsBrands represents an array of brands for a particular category .\r\n      //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the all the relevant brands. \r\n    const [productsBrands,setProductsBrands] = useState([\"Illyrian Bloodline\",\"KTM\",\"Zara\",\"Adidas\",\"Nike\",\"Code4Life\"]);\r\n\r\n\r\n    let productsColors = [\"White\",\"Purple\",\"Yellow\",\"Green\",\"Brown\",\"Orange\",\"Gray\",\"Blue\",\"Silver\",\"Red\",\"Black\"];\r\n\r\n\r\n    //productsOrder can be : standard , price ascending , price descending .\r\n    //@by default the value is set to be \"standard\";\r\n    const [productsOrder,setProductsOrder] = useState(\"standard\");\r\n\r\n        const productsOrderOptions = [{value: \"standard\", text: \"Standard\" } , {value: \"price_ascending\", text: \"Price ascending\" },{value: \"price_descending\", text: \"Price descending\" } ];\r\n            const changeProductsOrder = val => setProductsOrder(val);\r\n\r\n    //products number represents the number of the products that need to be displayed , the value can be 20, 30 or 40 .\r\n    // @By default the value is set to be 20\r\n    const[productsNumber,setProductsNumber] = useState(20);\r\n\r\n        const productsNumberOptions = [{value: \"20\" , text : \"20\"},{value: \"30\" , text : \"30\"},{value: \"40\" , text : \"40\"}]\r\n            const changeProductsNumber = val => setProductsNumber(val);\r\n    \r\n        //productsPreferredBrand represents an array of brands that are selected as preferred brands , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products from all the posssible brands.\r\n        const[productsPreferredBrand,setProductsPreferredBrand] = useState([]);\r\n\r\n            //Function that sets/unsets the preferred brand/s\r\n            function toggleBrandPreferences(index){}\r\n\r\n\r\n        //productsPreferredBrand represents an array of colors that are selected as preferred colors , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible colors.\r\n        const[productsPreferredColor,setProductsPreferredColor] = useState([]);\r\n\r\n            //Function that sets/unsets the preferred color/s\r\n            function toggleColorPreferences(index){}\r\n\r\n        //productsPriceRange represents an object wich contains the attributes : \"lowestPrice\" (for the lowest price that the products can be) and  \"highestPrice\" (for the highest price that the products can be).\r\n        //@By default the object has attributes that have values 0 each , in this situation we expect all the products \r\n        const[productsPriceRange,setProductsPriceRange] = useState({lowestPrice: 0 , highestPrice: 999});\r\n    \r\n            \r\n        //productsPreferedSizes represents an array of sizes that are selected as preferred sized , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible sizes.\r\n        const [productsPreferedSizes,setProductsPreferedSizes] = useState([]);\r\n\r\n                //Function that sets/unsets the preferred size/s\r\n                function toggleSizePreferences(index){}\r\n\r\n        const[filterTableDisplay,setFilterTableDisplay] = useState(false);\r\n\r\n                //Function that closes all the options for filtering the products\r\n                function setAllFilterButtonsToFalse()\r\n                { setPbTableDisplay(false); setPsTableDisplay(false); setPcTableDisplay(false);}\r\n        \r\n        const[pbTableDisplay,setPbTableDisplay] = useState(false);\r\n        const[pcTableDisplay,setPcTableDisplay] = useState(false);\r\n        const[psTableDisplay,setPsTableDisplay] = useState(false);\r\n\r\n\r\n\r\n\r\n////TODO : an api endpoint from the server side for fetching data\r\nconst getItems = () =>\r\n[\r\n    {name: 'addidas shoe', price : \"130$\" , image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FFV7957.jpg\", description : {short : 'shoe for these cold times' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n\r\n    \r\n]\r\n\r\n\r\n    return (\r\n        <section id=\"productBody\">\r\n           \r\n                \r\n\r\n                <div id=\"firstElement\">\r\n                    <Select labelText=\"Order by\" onChangeFunction={(e)=> changeProductsOrder(e.target.value)} name=\"sort\" options={productsOrderOptions}></Select>\r\n                    <Select labelText=\"Display\" onChangeFunction={(e)=> changeProductsNumber(e.target.value)} name=\"display\" options={productsNumberOptions}></Select>\r\n                </div>\r\n                \r\n\r\n                <div id=\"secondElement\" className={filterTableDisplay ? \"filterTable\" : \"filterTableNone\"}>\r\n\r\n                    <div id='filterOptions' >\r\n                        <InputSlider productsPriceRange={productsPriceRange} ranges={{min: 0 , max: 999}}  step={5} setPreferredLowestPrice={(number) => {setProductsPriceRange({lowestPrice : number ,highestPrice : productsPriceRange.highestPrice})}} setPreferredHighestPrice={(number) => {setProductsPriceRange({lowestPrice : productsPriceRange.lowestPrice ,highestPrice : 999 - number })}} ></InputSlider>\r\n                        <button className={ pbTableDisplay ? \"clickedButton\" : \"s\"} id=\"pbButton\" onClick={() => {setPbTableDisplay(!pbTableDisplay)} }>Preferred brands</button>\r\n                        <button className={ psTableDisplay ? \"clickedButton\" : \"s\"} id=\"psButton\" onClick={() => {setPsTableDisplay(!psTableDisplay)} }>Preferred sizes</button>\r\n                        <button className={ pcTableDisplay ? \"clickedButton\" : \"s\"} id=\"pcButton\" onClick={() => {setPcTableDisplay(!pcTableDisplay)} }>Preferred colors</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            <div id=\"thirdElement\">\r\n\r\n                    <CheckBox  tableDisplay={pbTableDisplay} productsX={productsBrands} nameCheckBox=\"preferredBrands\" onChangeCheckBox={(index) => toggleBrandPreferences(index)}></CheckBox>\r\n\r\n                    <CheckBox tableDisplay={psTableDisplay} productsX={productsSizes} nameCheckBox=\"preferredSizes\" onChangeCheckBox={(index) => toggleSizePreferences(index)}></CheckBox>\r\n\r\n                    <CheckBox tableDisplay={pcTableDisplay} productsX={productsColors} nameCheckBox=\"preferredColors\" onChangeCheckBox={(index) => toggleColorPreferences(index)}></CheckBox>\r\n\r\n            </div>\r\n\r\n            <div id=\"fourthElement\">\r\n                <ItemList items = {getItems()} gridcolumns={4}></ItemList>\r\n            </div>\r\n\r\n        \r\n\r\n        </section>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}