{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\reactWeatherApp_Local\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Container from './components/Container/Container';\nimport Input from './components/Input/Input';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherApi = {\n  url: `https://api.weatherapi.com/v1/forecast.json`,\n  key: `9c1199b65355418b8fb150557211312`,\n  createUrl: function (city, days) {\n    return `${this.url}?key=${this.key}&q=${city}&days=${days}`;\n  }\n};\n\nfunction forecastDay() {}\n\nfunction forecast(location, localtime, currentWeather, forecastDays) {\n  //represents the location (example: Skopje/Macedonia ,Kumanovo/Macedonia , Tetovo/Macedonia)\n  this.location = location; //represents the local date and time the request was made (example: 2021-12-14 22:09)\n\n  this.localtime = localtime; //represents the current weather , an object with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n\n  this.currentWeather = currentWeather; //represents an array of objects , with attributes : date_time , an array of objects with attributes : temp \n\n  this.forecastDays = forecastDays;\n}\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"Skopje\");\n  const [days, setDays] = useState(1);\n  const [weather, setWeather] = useState([{\n    city: city,\n    temp: '20'\n  }]);\n\n  function search(c) {\n    let days = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    setCity(c);\n    setDays(days);\n    axios.get(weatherApi.createUrl(city, days)).then( // data => setWeather({\n    // city: data.location.name,\n    // temp: data.current.temp_c\n    // }\n    resp => console.log(resp.data)).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"main\",\n      list: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Zsb7VIqsbrRKqufRT0VuAdpQEgc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Bootcamp/reactWeatherApp_Local/app/src/App.js"],"names":["Container","Input","useState","axios","weatherApi","url","key","createUrl","city","days","forecastDay","forecast","location","localtime","currentWeather","forecastDays","App","setCity","setDays","weather","setWeather","temp","search","c","get","then","resp","console","log","data","catch","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,UAAU,GAAG;AAEjBC,EAAAA,GAAG,EAAG,6CAFW;AAGjBC,EAAAA,GAAG,EAAG,iCAHW;AAIjBC,EAAAA,SAAS,EAAG,UAAWC,IAAX,EAAgBC,IAAhB,EACZ;AAAC,WAAQ,GAAE,KAAKJ,GAAI,QAAO,KAAKC,GAAI,MAAKE,IAAK,SAAQC,IAAK,EAA1D;AAA6D;AAL7C,CAAnB;;AAQA,SAASC,WAAT,GACA,CAEC;;AAED,SAASC,QAAT,CAAmBC,QAAnB,EAA4BC,SAA5B,EAAsCC,cAAtC,EAAqDC,YAArD,EACA;AACE;AACA,OAAKH,QAAL,GAAgBA,QAAhB,CAFF,CAGE;;AACA,OAAKC,SAAL,GAAiBA,SAAjB,CAJF,CAKE;;AACA,OAAKC,cAAL,GAAsBA,cAAtB,CANF,CAOE;;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACD;;AAED,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACR,IAAD,EAAMS,OAAN,IAAiBf,QAAQ,CAAC,QAAD,CAA/B;AACA,QAAM,CAACO,IAAD,EAAMS,OAAN,IAAiBhB,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM,CAACiB,OAAD,EAASC,UAAT,IAAuBlB,QAAQ,CAAC,CAAC;AAAEM,IAAAA,IAAI,EAAEA,IAAR;AAAaa,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAAD,CAArC;;AAEA,WAASC,MAAT,CAAgBC,CAAhB,EACA;AAAA,QADkBd,IAClB,uEADuB,CACvB;AACEQ,IAAAA,OAAO,CAACM,CAAD,CAAP;AACAL,IAAAA,OAAO,CAACT,IAAD,CAAP;AACAN,IAAAA,KAAK,CAACqB,GAAN,CAAUpB,UAAU,CAACG,SAAX,CAAqBC,IAArB,EAA0BC,IAA1B,CAAV,EAA2CgB,IAA3C,EACE;AACA;AACA;AACF;AACAC,IAAAA,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,CALR,EAMEC,KANF,CAMQC,KAAK,IAAI;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KARD;AASD;;AAID,sBACE;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAA,4BACC,QAAC,KAAD;AAAO,MAAA,MAAM,EAAET;AAAf;AAAA;AAAA;AAAA;AAAA,YADD,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,IAAI,EAAEH;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7BQH,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Container from './components/Container/Container';\nimport Input from './components/Input/Input';\n\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\nconst weatherApi = {\n\n  url: `https://api.weatherapi.com/v1/forecast.json`,\n  key: `9c1199b65355418b8fb150557211312`,\n  createUrl : function  (city,days) \n  {return `${this.url}?key=${this.key}&q=${city}&days=${days}`;}\n}\n\nfunction forecastDay()\n{\n\n}\n\nfunction forecast (location,localtime,currentWeather,forecastDays)\n{\n  //represents the location (example: Skopje/Macedonia ,Kumanovo/Macedonia , Tetovo/Macedonia)\n  this.location = location;\n  //represents the local date and time the request was made (example: 2021-12-14 22:09)\n  this.localtime = localtime;\n  //represents the current weather , an object with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n  this.currentWeather = currentWeather;\n  //represents an array of objects , with attributes : date_time , an array of objects with attributes : temp \n  this.forecastDays = forecastDays;\n}\n\nfunction App() {\n  const [city,setCity] = useState(\"Skopje\");\n  const [days,setDays] = useState(1); \n  const [weather,setWeather] = useState([{ city: city,temp: '20'}]);\n\n  function search(c,days=1)\n  {\n    setCity(c);\n    setDays(days);\n    axios.get(weatherApi.createUrl(city,days)).then(\n      // data => setWeather({\n      // city: data.location.name,\n      // temp: data.current.temp_c\n    // }\n    resp => console.log(resp.data)\n    ).catch(error => {\n      console.log(error)\n    });\n  }\n\n\n\n  return (\n    <section className=\"App\">\n     <Input search={search}></Input>\n      <Container className=\"main\" list={weather}>\n      </Container>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}