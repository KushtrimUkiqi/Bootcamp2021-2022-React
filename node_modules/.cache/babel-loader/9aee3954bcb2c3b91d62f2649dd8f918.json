{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\e-shop\\\\app\\\\src\\\\components\\\\LogIn\\\\LogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from 'react';\nimport \"./LogIn.css\";\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport UserCredentials from '../../classes/UserCredentials';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogIn() {\n  _s();\n\n  const [logInError, setLogInError] = useState({\n    exists: false,\n    message: \"\"\n  });\n  const {\n    auth,\n    setAuth\n  } = useContext(UserContext);\n  const username = useRef(null);\n  const password = useRef(null);\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\n\n  async function loginUser(u, p) {\n    const url = `http://127.0.0.1:8080/login`;\n    const data = {\n      username: \"kushtrim\",\n      password: \"kus\"\n    };\n    const resp = await fetch(url, {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  function togglePasswordVisibility() {\n    let x = password.current;\n    setPasswordVisibility(!passwordVisibility);\n\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  }\n\n  function login() {\n    let user = username.current.value;\n    let pass = password.current.value;\n\n    if (user === \"\" || user === undefined) {\n      setLogInError({\n        exists: true,\n        message: \"Provide an username\"\n      });\n    } else if (pass === \"\" || pass === undefined) {\n      setLogInError({\n        exists: true,\n        message: \"Provide a password\"\n      });\n    } else if (logInError.exists) {\n      setLogInError({\n        exists: false,\n        message: \"\"\n      });\n    }\n\n    loginUser(user, pass);\n    setAuth(new UserCredentials(true, \"sudsfissifs\", \"\"));\n    Cookies.set(\"userCredentials\", \"randomString\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"logIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorLogIn\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: logInError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"userNameLogInInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your user name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: username,\n        type: \"text\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"passwordLogInInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: password,\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"togglePasswordVisibility\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: () => togglePasswordVisibility()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: passwordVisibility ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 123\n        }, this), \" password\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"logInButton\",\n      onClick: e => {\n        e.preventDefault();\n        login();\n      },\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"registerOption\",\n        onClick: () => {},\n        children: \"Don't have an account?  Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogIn, \"CFaQwEVU6T4ozMW5I8UOeL4L/44=\");\n\n_c = LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["C:/Bootcamp/e-shop/app/src/components/LogIn/LogIn.js"],"names":["React","useState","useRef","useContext","Link","UserContext","UserCredentials","Cookies","LogIn","logInError","setLogInError","exists","message","auth","setAuth","username","password","passwordVisibility","setPasswordVisibility","loginUser","u","p","url","data","resp","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","togglePasswordVisibility","x","current","type","login","user","value","pass","undefined","set","e","preventDefault"],"mappings":"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","sourcesContent":["import React,{useState,useRef,useContext} from 'react';\r\nimport \"./LogIn.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport UserCredentials from '../../classes/UserCredentials';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function LogIn() {\r\n\r\n    const [logInError,setLogInError] = useState({exists: false , message: \"\"});\r\n    const {auth,setAuth} = useContext(UserContext);\r\n    const username = useRef(null);\r\n    const password = useRef(null);\r\n    const [passwordVisibility,setPasswordVisibility] = useState(false);\r\n\r\n\r\n    async function loginUser(u,p) {\r\n        const url =  `http://127.0.0.1:8080/login`;\r\n        \r\n        const data = { username: \"kushtrim\", password: \"kus\" };\r\n\r\n        const resp = await fetch(url, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n            }).then(response => response.json())\r\n            .then(data => {\r\n              console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error:', error);\r\n            });\r\n      }\r\n\r\n    function togglePasswordVisibility()\r\n    {\r\n        let x = password.current;\r\n        setPasswordVisibility(!passwordVisibility);\r\n\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n          } else {\r\n            x.type = \"password\";\r\n          }\r\n    }\r\n    \r\n    function login ()\r\n    {\r\n            let user = username.current.value;\r\n            let pass = password.current.value;\r\n\r\n            if(user === \"\" || user === undefined) \r\n            {\r\n                setLogInError({exists: true , message: \"Provide an username\"});\r\n            }\r\n            \r\n            else if(pass === \"\" || pass === undefined)\r\n            {\r\n                setLogInError({exists: true , message: \"Provide a password\"});\r\n            }\r\n\r\n            else if (logInError.exists)\r\n            {\r\n                setLogInError({exists: false , message: \"\"});\r\n            }\r\n\r\n            loginUser(user,pass);\r\n            setAuth(new UserCredentials(true,\"sudsfissifs\",\"\"));\r\n            Cookies.set(\"userCredentials\",\"randomString\");\r\n    }\r\n    return (\r\n        <form id=\"logIn\">\r\n\r\n                <div id=\"errorLogIn\">\r\n                    <label>{logInError.message}</label>\r\n                </div>\r\n\r\n            <div id=\"userNameLogInInput\">\r\n                <label>Enter your user name</label>\r\n                <input ref={username} type=\"text\" name=\"username\"/>\r\n            </div>\r\n\r\n            <div id=\"passwordLogInInput\">\r\n                <label>Enter your password</label>\r\n                <input ref={password} type=\"password\" name=\"password\"/>\r\n            </div>\r\n\r\n            <div id=\"togglePasswordVisibility\"><input type=\"checkbox\" onClick={() => togglePasswordVisibility()}/><label ><span>{passwordVisibility? \"Hide\" : \"Show\"}</span> password</label></div>\r\n\r\n\r\n            <button id=\"logInButton\"  onClick={(e) => {e.preventDefault(); login()}}>Log in</button>\r\n            <Link to=\"/register\"><div id=\"registerOption\" onClick={() => {}}>Don't have an account?  Register!</div></Link>\r\n\r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}