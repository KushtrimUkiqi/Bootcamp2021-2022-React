{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\e-shop\\\\app\\\\src\\\\pages\\\\Products\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Products.css\";\nimport ItemList from '../../components/ItemList/ItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Product() {\n  _s();\n\n  //id represents the category of the products to be displayed \n  const {\n    id\n  } = useParams(); //productsSizes represents an array of sizes for a particular category .\n  //example if the category is shoes , the array should be like :  [\"43\",\"44\",\"44\",\"45\"] ...\n  //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the relevant sizes. \n\n  const [productsSizes, setProductsSizes] = useState([\"xs\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"]); //productsBrands represents an array of brands for a particular category .\n  //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the all the relevant brands. \n\n  const [productsBrands, setProductsBrands] = useState([\"Illyrian Bloodline\", \"KTM\", \"Zara\", \"Adidas\", \"Nike\", \"Code4Life\"]);\n  let productsColors = [\"White\", \"Purple\", \"Yellow\", \"Green\", \"Brown\", \"Orange\", \"Gray\", \"Blue\", \"Silver\", \"Red\", \"Black\"]; //productsOrder can be : standard , price ascending , price descending .\n  //@by default the value is set to be \"standard\";\n\n  const [productsOrder, setProductsOrder] = useState(\"standard\"); //products number represents the number of the products that need to be displayed , the value can be 20, 30 or 40 .\n  // @By default the value is set to be 20\n\n  const [productsNumber, setProductsNumber] = useState(20); //productsPreferredBrand represents an array of brands that are selected as preferred brands , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products from all the posssible brands.\n\n  const [productsPreferredBrand, setProductsPreferredBrand] = useState([]); //Function that sets/unsets the preferred brand/s\n\n  function toggleBrandPreferences(index) {} //productsPreferredBrand represents an array of colors that are selected as preferred colors , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible colors.\n\n\n  const [productsPreferredColor, setProductsPreferredColor] = useState([]); //Function that sets/unsets the preferred color/s\n\n  function toggleColorPreferences(index) {} //productsPriceRange represents an object wich contains the attributes : \"lowestPrice\" (for the lowest price that the products can be) and  \"highestPrice\" (for the highest price that the products can be).\n  //@By default the object has attributes that have values 0 each , in this situation we expect all the products \n\n\n  const [productsPriceRange, setProductsPriceRange] = useState({\n    lowestPrice: 0,\n    highestPrice: 9999\n  }); //productsPreferedSizes represents an array of sizes that are selected as preferred sized , the array can contain 0 or more elements .\n  //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible sizes.\n\n  const [productsPreferedSizes, setProductsPreferedSizes] = useState([]); //Function that sets/unsets the preferred size/s\n\n  function toggleSizePreferences(index) {}\n\n  const [filterTableDisplay, setFilterTableDisplay] = useState(false); //Function that closes all the options for filtering the products\n\n  function setAllFilterButtonsToFalse() {\n    setPbTableDisplay(false);\n    setPsTableDisplay(false);\n    setPcTableDisplay(false);\n  }\n\n  const [pbTableDisplay, setPbTableDisplay] = useState(false);\n  const [pcTableDisplay, setPcTableDisplay] = useState(false);\n  const [psTableDisplay, setPsTableDisplay] = useState(false); ////TODO : an api endpoint from the server side for fetching data\n\n  const getItems = () => [{\n    name: 'addidas shoe',\n    price: \"130$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FFV7957.jpg\",\n    description: {\n      short: 'shoe for these cold times',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }, {\n    name: 'addidas jacket',\n    price: \"309$\",\n    image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\",\n    description: {\n      short: 'ideal jacket for you',\n      details: \"...\"\n    }\n  }];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"filterTable\",\n      className: filterTableDisplay ? \"clickedButton\" : \"\",\n      onClick: () => {\n        setFilterTableDisplay(!filterTableDisplay);\n        if (filterTableDisplay) setAllFilterButtonsToFalse();\n      },\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sort\",\n        id: \"sortProducts\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"optionValue\",\n          value: \"standard\",\n          children: \"Standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"optionValue\",\n          value: \"price_ascending\",\n          children: \"Price ascending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"optionValue\",\n          value: \"price_descending\",\n          children: \"Price descending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: filterTableDisplay ? \"filterTable\" : \"filterTableNone\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filterOptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputSlider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ppInputAscending\",\n            type: \"range\",\n            min: \"0\",\n            max: \"999\",\n            step: \"5\",\n            onChange: e => setProductsPriceRange({\n              lowestPrice: Number.parseInt(e.target.value),\n              highestPrice: productsPriceRange.highestPrice\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ppInputDescending\",\n            type: \"range\",\n            min: \"0\",\n            max: \"999\",\n            step: \"5\",\n            onChange: e => setProductsPriceRange({\n              lowestPrice: productsPriceRange.lowestPrice,\n              highestPrice: Number.parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: pbTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"pbButton\",\n          onClick: () => {\n            setPbTableDisplay(!pbTableDisplay);\n          },\n          children: \"Preferred brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: psTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"psButton\",\n          onClick: () => {\n            setPsTableDisplay(!psTableDisplay);\n          },\n          children: \"Preferred sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: pcTableDisplay ? \"clickedButton\" : \"s\",\n          id: \"pcButton\",\n          onClick: () => {\n            setPcTableDisplay(!pcTableDisplay);\n          },\n          children: \"Preferred colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pbTableDisplay ? \"productTableDisplay\" : \"none\",\n      children: productsBrands.map((brandInContext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"preferredBrands\",\n          value: brandInContext,\n          onChange: () => {\n            toggleBrandPreferences(index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: brandInContext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 201\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 64\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: psTableDisplay ? \"productTableDisplay\" : \"none\",\n      children: productsSizes.map((sizeInContext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"preferredBrands\",\n          value: sizeInContext,\n          onChange: () => {\n            toggleSizePreferences(index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: sizeInContext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 194\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 59\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pcTableDisplay ? \"productTableDisplay\" : \"none\",\n      children: productsColors.map((colorInContext, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"preferredColors\",\n          value: colorInContext,\n          onChange: () => {\n            toggleColorPreferences(index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 77\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: colorInContext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 197\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 60\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: getItems(),\n      gridcolumns: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Product, \"STmrbf2KPxYRsN7oTN22L1icz6U=\", false, function () {\n  return [useParams];\n});\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Bootcamp/e-shop/app/src/pages/Products/Products.js"],"names":["React","useEffect","useState","useParams","ItemList","Product","id","productsSizes","setProductsSizes","productsBrands","setProductsBrands","productsColors","productsOrder","setProductsOrder","productsNumber","setProductsNumber","productsPreferredBrand","setProductsPreferredBrand","toggleBrandPreferences","index","productsPreferredColor","setProductsPreferredColor","toggleColorPreferences","productsPriceRange","setProductsPriceRange","lowestPrice","highestPrice","productsPreferedSizes","setProductsPreferedSizes","toggleSizePreferences","filterTableDisplay","setFilterTableDisplay","setAllFilterButtonsToFalse","setPbTableDisplay","setPsTableDisplay","setPcTableDisplay","pbTableDisplay","pcTableDisplay","psTableDisplay","getItems","name","price","image","description","short","details","e","Number","parseInt","target","value","map","brandInContext","sizeInContext","colorInContext"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,oCAArB;;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE9B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB,CAH8B,CAK9B;AACA;AACA;;AACA,QAAM,CAACI,aAAD,EAAeC,gBAAf,IAAmCN,QAAQ,CAAC,CAAC,IAAD,EAAM,GAAN,EAAU,GAAV,EAAc,GAAd,EAAkB,IAAlB,EAAuB,KAAvB,CAAD,CAAjD,CAR8B,CAU7B;AACC;;AACF,QAAM,CAACO,cAAD,EAAgBC,iBAAhB,IAAqCR,QAAQ,CAAC,CAAC,oBAAD,EAAsB,KAAtB,EAA4B,MAA5B,EAAmC,QAAnC,EAA4C,MAA5C,EAAmD,WAAnD,CAAD,CAAnD;AAGA,MAAIS,cAAc,GAAG,CAAC,OAAD,EAAS,QAAT,EAAkB,QAAlB,EAA2B,OAA3B,EAAmC,OAAnC,EAA2C,QAA3C,EAAoD,MAApD,EAA2D,MAA3D,EAAkE,QAAlE,EAA2E,KAA3E,EAAiF,OAAjF,CAArB,CAf8B,CAkB9B;AACA;;AACA,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCX,QAAQ,CAAC,UAAD,CAAjD,CApB8B,CAsB9B;AACA;;AACA,QAAK,CAACY,cAAD,EAAgBC,iBAAhB,IAAqCb,QAAQ,CAAC,EAAD,CAAlD,CAxB8B,CA2B1B;AACA;;AACA,QAAK,CAACc,sBAAD,EAAwBC,yBAAxB,IAAqDf,QAAQ,CAAC,EAAD,CAAlE,CA7B0B,CA+BtB;;AACA,WAASgB,sBAAT,CAAgCC,KAAhC,EAAsC,CAAE,CAhClB,CAmC1B;AACA;;;AACA,QAAK,CAACC,sBAAD,EAAwBC,yBAAxB,IAAqDnB,QAAQ,CAAC,EAAD,CAAlE,CArC0B,CAuCtB;;AACA,WAASoB,sBAAT,CAAgCH,KAAhC,EAAsC,CAAE,CAxClB,CA0C1B;AACA;;;AACA,QAAK,CAACI,kBAAD,EAAoBC,qBAApB,IAA6CtB,QAAQ,CAAC;AAACuB,IAAAA,WAAW,EAAE,CAAd;AAAkBC,IAAAA,YAAY,EAAE;AAAhC,GAAD,CAA1D,CA5C0B,CA+C1B;AACA;;AACA,QAAM,CAACC,qBAAD,EAAuBC,wBAAvB,IAAmD1B,QAAQ,CAAC,EAAD,CAAjE,CAjD0B,CAmDlB;;AACA,WAAS2B,qBAAT,CAA+BV,KAA/B,EAAqC,CAAE;;AAE/C,QAAK,CAACW,kBAAD,EAAoBC,qBAApB,IAA6C7B,QAAQ,CAAC,KAAD,CAA1D,CAtD0B,CAwDlB;;AACA,WAAS8B,0BAAT,GACA;AAAEC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0BC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0BC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0B;;AAExF,QAAK,CAACC,cAAD,EAAgBH,iBAAhB,IAAqC/B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAK,CAACmC,cAAD,EAAgBF,iBAAhB,IAAqCjC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAK,CAACoC,cAAD,EAAgBJ,iBAAhB,IAAqChC,QAAQ,CAAC,KAAD,CAAlD,CA9D0B,CAmElC;;AACA,QAAMqC,QAAQ,GAAG,MACjB,CACI;AAACC,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,KAAK,EAAG,MAA/B;AAAwCC,IAAAA,KAAK,EAAE,wEAA/C;AAAyHC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,2BAAT;AAAuCC,MAAAA,OAAO,EAAG;AAAjD;AAAvI,GADJ,EAEK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GAFL,EAGK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GAHL,EAIK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GAJL,EAKK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GALL,EAMK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GANL,EAOK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GAPL,EAQK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GARL,EASK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GATL,EAUK;AAACL,IAAAA,IAAI,EAAE,gBAAP;AAA0BC,IAAAA,KAAK,EAAG,MAAlC;AAA0CC,IAAAA,KAAK,EAAE,wEAAjD;AAA2HC,IAAAA,WAAW,EAAG;AAACC,MAAAA,KAAK,EAAG,sBAAT;AAAkCC,MAAAA,OAAO,EAAG;AAA5C;AAAzI,GAVL,CADA;;AAiBI,sBACI;AAAA,4BAEQ;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,SAAS,EAAEf,kBAAkB,GAAG,eAAH,GAAqB,EAA3E;AAA+E,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AAA4C,YAAGA,kBAAH,EAAsBE,0BAA0B;AAAI,OAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAIQ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,EAAE,EAAC,cAAvB;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,KAAK,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,KAAK,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,KAAK,EAAC,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAiBI;AAAM,MAAA,SAAS,EAAEF,kBAAkB,GAAG,aAAH,GAAmB,iBAAtD;AAAA,6BAEQ;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC,aAAR;AAAA,kCAEI;AAAO,YAAA,EAAE,EAAC,kBAAV;AAA6B,YAAA,IAAI,EAAC,OAAlC;AAA0C,YAAA,GAAG,EAAC,GAA9C;AAAkD,YAAA,GAAG,EAAC,KAAtD;AAA6D,YAAA,IAAI,EAAC,GAAlE;AAAsE,YAAA,QAAQ,EAAGgB,CAAD,IAAQtB,qBAAqB,CAAC;AAACC,cAAAA,WAAW,EAAGsB,MAAM,CAACC,QAAP,CAAgBF,CAAC,CAACG,MAAF,CAASC,KAAzB,CAAf;AAAgDxB,cAAAA,YAAY,EAAGH,kBAAkB,CAACG;AAAlF,aAAD;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAO,YAAA,EAAE,EAAC,mBAAV;AAA8B,YAAA,IAAI,EAAC,OAAnC;AAA2C,YAAA,GAAG,EAAC,GAA/C;AAAmD,YAAA,GAAG,EAAC,KAAvD;AAA6D,YAAA,IAAI,EAAC,GAAlE;AAAsE,YAAA,QAAQ,EAAGoB,CAAD,IAAQtB,qBAAqB,CAAC;AAACC,cAAAA,WAAW,EAAGF,kBAAkB,CAACE,WAAlC;AAA+CC,cAAAA,YAAY,EAAGqB,MAAM,CAACC,QAAP,CAAgBF,CAAC,CAACG,MAAF,CAASC,KAAzB;AAA9D,aAAD;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAQ,UAAA,SAAS,EAAGd,cAAc,GAAG,eAAH,GAAqB,GAAvD;AAA4D,UAAA,EAAE,EAAC,UAA/D;AAA0E,UAAA,OAAO,EAAE,MAAM;AAACH,YAAAA,iBAAiB,CAAC,CAACG,cAAF,CAAjB;AAAmC,WAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,SAAS,EAAGE,cAAc,GAAG,eAAH,GAAqB,GAAvD;AAA4D,UAAA,EAAE,EAAC,UAA/D;AAA0E,UAAA,OAAO,EAAE,MAAM;AAACJ,YAAAA,iBAAiB,CAAC,CAACI,cAAF,CAAjB;AAAmC,WAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAQ,UAAA,SAAS,EAAGD,cAAc,GAAG,eAAH,GAAqB,GAAvD;AAA4D,UAAA,EAAE,EAAC,UAA/D;AAA0E,UAAA,OAAO,EAAE,MAAM;AAACF,YAAAA,iBAAiB,CAAC,CAACE,cAAF,CAAjB;AAAmC,WAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAgCY;AAAK,MAAA,SAAS,EAAED,cAAc,GAAG,qBAAH,GAA2B,MAAzD;AAAA,gBACK3B,cAAc,CACN0C,GADR,CACY,CAACC,cAAD,EAAgBjC,KAAhB,kBAA0B;AAAA,gCAAiB;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,iBAA5B;AAA8C,UAAA,KAAK,EAAEiC,cAArD;AAAqE,UAAA,QAAQ,EAAE,MAAM;AAAClC,YAAAA,sBAAsB,CAACC,KAAD,CAAtB;AAA8B;AAApH;AAAA;AAAA;AAAA;AAAA,gBAAjB,eAAyI;AAAA,oBAAQiC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAAzI;AAAA,SAAUjC,KAAV;AAAA;AAAA;AAAA;AAAA,cADtC;AADL;AAAA;AAAA;AAAA;AAAA,YAhCZ,eAuCY;AAAK,MAAA,SAAS,EAAEmB,cAAc,GAAG,qBAAH,GAA2B,MAAzD;AAAA,gBACK/B,aAAa,CACT4C,GADJ,CACQ,CAACE,aAAD,EAAelC,KAAf,kBAAyB;AAAA,gCAAiB;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,iBAA5B;AAA8C,UAAA,KAAK,EAAEkC,aAArD;AAAqE,UAAA,QAAQ,EAAE,MAAM;AAACxB,YAAAA,qBAAqB,CAACV,KAAD,CAArB;AAA6B;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAAjB,eAAuI;AAAA,oBAAQkC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAAvI;AAAA,SAAUlC,KAAV;AAAA;AAAA;AAAA;AAAA,cADjC;AADL;AAAA;AAAA;AAAA;AAAA,YAvCZ,eA6CY;AAAK,MAAA,SAAS,EAAEkB,cAAc,GAAG,qBAAH,GAA2B,MAAzD;AAAA,gBACK1B,cAAc,CACVwC,GADJ,CACQ,CAACG,cAAD,EAAgBnC,KAAhB,kBAA0B;AAAA,gCAAiB;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,iBAA5B;AAA8C,UAAA,KAAK,EAAEmC,cAArD;AAAsE,UAAA,QAAQ,EAAE,MAAM;AAAChC,YAAAA,sBAAsB,CAACH,KAAD,CAAtB;AAA8B;AAArH;AAAA;AAAA;AAAA;AAAA,gBAAjB,eAAyI;AAAA,oBAAQmC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAAzI;AAAA,SAAUnC,KAAV;AAAA;AAAA;AAAA;AAAA,cADlC;AADL;AAAA;AAAA;AAAA;AAAA,YA7CZ,eAmDY,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIoB,QAAQ,EAA3B;AAA+B,MAAA,WAAW,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAnDZ;AAAA,kBADJ;AAuDH;;GA5IuBlC,O;UAGPF,S;;;KAHOE,O","sourcesContent":["import React from 'react';\r\nimport {useEffect,useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./Products.css\";\r\nimport ItemList from '../../components/ItemList/ItemList';\r\nexport default function Product() {\r\n    \r\n    //id represents the category of the products to be displayed \r\n    const {id} = useParams();\r\n\r\n    //productsSizes represents an array of sizes for a particular category .\r\n    //example if the category is shoes , the array should be like :  [\"43\",\"44\",\"44\",\"45\"] ...\r\n    //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the relevant sizes. \r\n    const [productsSizes,setProductsSizes] = useState([\"xs\",\"s\",\"m\",\"l\",\"xl\",\"xxl\"]);\r\n\r\n     //productsBrands represents an array of brands for a particular category .\r\n      //By default the array is set to be empty , during the first fetch of the api call we expect the array to be filled with the all the relevant brands. \r\n    const [productsBrands,setProductsBrands] = useState([\"Illyrian Bloodline\",\"KTM\",\"Zara\",\"Adidas\",\"Nike\",\"Code4Life\"]);\r\n\r\n\r\n    let productsColors = [\"White\",\"Purple\",\"Yellow\",\"Green\",\"Brown\",\"Orange\",\"Gray\",\"Blue\",\"Silver\",\"Red\",\"Black\"];\r\n\r\n\r\n    //productsOrder can be : standard , price ascending , price descending .\r\n    //@by default the value is set to be \"standard\";\r\n    const [productsOrder,setProductsOrder] = useState(\"standard\");\r\n\r\n    //products number represents the number of the products that need to be displayed , the value can be 20, 30 or 40 .\r\n    // @By default the value is set to be 20\r\n    const[productsNumber,setProductsNumber] = useState(20);\r\n\r\n    \r\n        //productsPreferredBrand represents an array of brands that are selected as preferred brands , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products from all the posssible brands.\r\n        const[productsPreferredBrand,setProductsPreferredBrand] = useState([]);\r\n\r\n            //Function that sets/unsets the preferred brand/s\r\n            function toggleBrandPreferences(index){}\r\n\r\n\r\n        //productsPreferredBrand represents an array of colors that are selected as preferred colors , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible colors.\r\n        const[productsPreferredColor,setProductsPreferredColor] = useState([]);\r\n\r\n            //Function that sets/unsets the preferred color/s\r\n            function toggleColorPreferences(index){}\r\n\r\n        //productsPriceRange represents an object wich contains the attributes : \"lowestPrice\" (for the lowest price that the products can be) and  \"highestPrice\" (for the highest price that the products can be).\r\n        //@By default the object has attributes that have values 0 each , in this situation we expect all the products \r\n        const[productsPriceRange,setProductsPriceRange] = useState({lowestPrice: 0 , highestPrice: 9999});\r\n    \r\n            \r\n        //productsPreferedSizes represents an array of sizes that are selected as preferred sized , the array can contain 0 or more elements .\r\n        //@By default the array contains 0 elements and in this situation, from the server side we will recive products with all the posssible sizes.\r\n        const [productsPreferedSizes,setProductsPreferedSizes] = useState([]);\r\n\r\n                //Function that sets/unsets the preferred size/s\r\n                function toggleSizePreferences(index){}\r\n\r\n        const[filterTableDisplay,setFilterTableDisplay] = useState(false);\r\n\r\n                //Function that closes all the options for filtering the products\r\n                function setAllFilterButtonsToFalse()\r\n                { setPbTableDisplay(false); setPsTableDisplay(false); setPcTableDisplay(false);}\r\n        \r\n        const[pbTableDisplay,setPbTableDisplay] = useState(false);\r\n        const[pcTableDisplay,setPcTableDisplay] = useState(false);\r\n        const[psTableDisplay,setPsTableDisplay] = useState(false);\r\n\r\n\r\n\r\n\r\n////TODO : an api endpoint from the server side for fetching data\r\nconst getItems = () =>\r\n[\r\n    {name: 'addidas shoe', price : \"130$\" , image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FFV7957.jpg\", description : {short : 'shoe for these cold times' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n    ,{name: 'addidas jacket',  price : \"309$\" ,image: \"https://sport-m.com.mk/Image/Show?Pateka=%2FProductImages%2FGT1699.jpg\", description : {short : 'ideal jacket for you' , details : \"...\"}}\r\n\r\n    \r\n]\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div id='filter'> */}\r\n                <button id='filterTable' className={filterTableDisplay ? \"clickedButton\" : \"\"} onClick={() => {setFilterTableDisplay(!filterTableDisplay); if(filterTableDisplay)setAllFilterButtonsToFalse();}}>Filter</button>\r\n                \r\n                <div>\r\n                    <label>Sort by</label>\r\n                    <select name=\"sort\" id=\"sortProducts\">\r\n                        <option className=\"optionValue\" value=\"standard\">Standard</option>\r\n                        <option className=\"optionValue\" value=\"price_ascending\">Price ascending</option>\r\n                        <option className=\"optionValue\" value=\"price_descending\">Price descending</option>\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                \r\n            {/* </div> */}\r\n\r\n            <div  className={filterTableDisplay ? \"filterTable\" : \"filterTableNone\"}>\r\n\r\n                    <div id='filterOptions' >\r\n                        <div id=\"inputSlider\">\r\n                        {/* productsPriceRange.highestPrice */}\r\n                            <input id=\"ppInputAscending\" type=\"range\" min=\"0\" max=\"999\"  step=\"5\" onChange={(e) =>  setProductsPriceRange({lowestPrice : Number.parseInt(e.target.value) ,highestPrice : productsPriceRange.highestPrice})}/>\r\n                            <input id=\"ppInputDescending\" type=\"range\" min=\"0\" max=\"999\" step='5' onChange={(e) =>  setProductsPriceRange({lowestPrice : productsPriceRange.lowestPrice ,highestPrice : Number.parseInt(e.target.value)})}/>\r\n                         </div>\r\n                        <button className={ pbTableDisplay ? \"clickedButton\" : \"s\"} id=\"pbButton\" onClick={() => {setPbTableDisplay(!pbTableDisplay)} }>Preferred brands</button>\r\n                        <button className={ psTableDisplay ? \"clickedButton\" : \"s\"} id=\"psButton\" onClick={() => {setPsTableDisplay(!psTableDisplay)} }>Preferred sizes</button>\r\n                        <button className={ pcTableDisplay ? \"clickedButton\" : \"s\"} id=\"pcButton\" onClick={() => {setPcTableDisplay(!pcTableDisplay)} }>Preferred colors</button>\r\n                    </div>                                                                          \r\n            </div>\r\n\r\n\r\n                    <div className={pbTableDisplay ? \"productTableDisplay\" : \"none\" }>\r\n                        {productsBrands\r\n                                .map((brandInContext,index) => <div key={index}><input type=\"checkbox\" name=\"preferredBrands\" value={brandInContext} onChange={() => {toggleBrandPreferences(index)}} /><label>{brandInContext}</label></div>)\r\n                            }\r\n                    </div>\r\n                \r\n                \r\n                    <div className={psTableDisplay ? \"productTableDisplay\" : \"none\" }>\r\n                        {productsSizes\r\n                            .map((sizeInContext,index) => <div key={index}><input type=\"checkbox\" name=\"preferredBrands\" value={sizeInContext}  onChange={() => {toggleSizePreferences(index)}}/><label>{sizeInContext}</label></div>)\r\n                        }\r\n                    </div>\r\n               \r\n                    <div className={pcTableDisplay ? \"productTableDisplay\" : \"none\" }>\r\n                        {productsColors\r\n                            .map((colorInContext,index) => <div key={index}><input type=\"checkbox\" name=\"preferredColors\" value={colorInContext}  onChange={() => {toggleColorPreferences(index)}}/><label>{colorInContext}</label></div>)\r\n                        }\r\n                    </div>\r\n\r\n                    <ItemList items = {getItems()} gridcolumns={4}></ItemList>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}