{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\e-shop\\\\app\\\\src\\\\components\\\\SizeTable\\\\SizeTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './SizeTable.css'; // sizes is an array of objects which contains the size and the availability i.e {size: 'M' , available : false}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SizeTable(_ref) {\n  _s();\n\n  let {\n    sizes\n  } = _ref;\n  const [selectedSize, setSelectedSize] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"sizeTable\",\n    children: sizes.map((size, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: size,\n      className: (size.available ? \"available\" : \"notAvailable\") + \" \" + (size === selectedSize ? \"colorBorder\" : \"tra\"),\n      onClick: e => {\n        if (size.available) setSelectedSize(e.target.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: size.size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 248\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SizeTable, \"VWT2tmsD1sBGwDW73lpvGlwFZTE=\");\n\n_c = SizeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SizeTable\");","map":{"version":3,"sources":["C:/Bootcamp/e-shop/app/src/components/SizeTable/SizeTable.js"],"names":["React","useState","SizeTable","sizes","selectedSize","setSelectedSize","map","size","index","available","e","target","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,iBAAP,C,CACA;;;AACA,eAAe,SAASC,SAAT,OAA4B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACvC,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCJ,QAAQ,CAAC,EAAD,CAA/C;AACA,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,cACKE,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBAAe;AAAiB,MAAA,EAAE,EAAED,IAArB;AAA4B,MAAA,SAAS,EAAE,CAACA,IAAI,CAACE,SAAL,GAAiB,WAAjB,GAA+B,cAAhC,IAAkD,GAAlD,IAAyDF,IAAI,KAAGH,YAAP,GAAsB,aAAtB,GAAsC,KAA/F,CAAvC;AAA+I,MAAA,OAAO,EAAGM,CAAD,IAAO;AAAC,YAAGH,IAAI,CAACE,SAAR,EAAkBJ,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,EAAV,CAAf;AAA6B,OAA/M;AAAA,6BAAiN;AAAA,kBAAIL,IAAI,CAACA;AAAT;AAAA;AAAA;AAAA;AAAA;AAAjN,OAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,YAAzB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAPuBN,S;;KAAAA,S","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport './SizeTable.css';\r\n// sizes is an array of objects which contains the size and the availability i.e {size: 'M' , available : false}\r\nexport default function SizeTable({sizes}) {\r\n    const [selectedSize,setSelectedSize] = useState(\"\");\r\n    return (\r\n        <div id=\"sizeTable\">\r\n            {sizes.map((size,index)=> <div key={index} id={size}  className={(size.available ? \"available\" : \"notAvailable\") + \" \" + (size===selectedSize ? \"colorBorder\" : \"tra\") } onClick={(e) => {if(size.available)setSelectedSize(e.target.id)}}><p>{size.size}</p></div>)}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}