{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\reactWeatherApp_Local\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Container from './components/Container/Container';\nimport Input from './components/Input/Input';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherApi = {\n  url: `https://api.weatherapi.com/v1/forecast.json`,\n  key: `9c1199b65355418b8fb150557211312`,\n  createUrl: function (city, days) {\n    return `${this.url}?key=${this.key}&q=${city}&days=${days}`;\n  }\n};\n\nfunction forecast(temp_celcius, tmep_fahrenheit, icon, weather_description) {\n  //represents the temperature in celcius (example: 4.0)\n  this.temp_celcius = temp_celcius; // string\n  //represents the temperature in fahrenheit (example: 39.2)\n\n  this.tmep_fahrenheit = tmep_fahrenheit; // string\n  //represents the icon (example: //cdn.weatherapi.com/weather/64x64/night/122.png)\n\n  this.icon = icon; //string\n  //represents the weather description (example: Overcast)\n\n  this.weather_description = weather_description; //string\n}\n\nfunction forecastDay(date, day) {\n  //represents the date (example: 2021.12.14)\n  this.date = date; //string\n  //represents the current weather , an object(forecast object is used) with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n\n  this.day = day; //forecast object\n}\n\nfunction weatherData(location, localtime, forecastDays) {\n  //represents the location (example: Skopje/Macedonia ,Kumanovo/Macedonia , Tetovo/Macedonia)\n  this.location = location; // string\n  //represents the local date and time the request was made (example: 2021-12-14 22:09)\n\n  this.localtime = localtime; //string\n  //represents the current weather , an object(forecast object is used) with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n  // this.currentWeather = currentWeather; // forecast\n  //currentWeather = new forecast('no temp','no temp','','')\n  //represents an array of objects(forecastDay is used)  with attributes : date , an array of 24 objects called *days* (forecast object is used) with attributes : temp_celcius,temp_fahrenheit,time,icon,weather_description \n\n  this.forecastDays = forecastDays; // forecastDay object\n}\n\nfunction App() {\n  _s();\n\n  function constructNewWeather() {\n    let location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Skopje\";\n    let localtime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${new Date().toLocaleString(undefined, {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      hour12: false,\n      minute: '2-digit',\n      second: '2-digit'\n    })}`;\n    let forecastDays = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [new forecast('no temp', 'no temp', '', '')];\n    return new weatherData();\n  }\n\n  const [city, setCity] = useState(\"Skopje\");\n  const [days, setDays] = useState(1);\n  const [weather, setWeather] = useState(constructNewWeatherArray());\n\n  function search(c) {\n    let days = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    setCity(c);\n    setDays(days);\n    axios.get(weatherApi.createUrl(city, days)).then( // data => setWeather({\n    // city: data.location.name,\n    // temp: data.current.temp_c\n    // }\n    resp => console.log(resp.data.location.name)).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"main\",\n      list: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xushW0e2vejLzT+CA5EXrRo0xkE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Bootcamp/reactWeatherApp_Local/app/src/App.js"],"names":["Container","Input","useState","axios","weatherApi","url","key","createUrl","city","days","forecast","temp_celcius","tmep_fahrenheit","icon","weather_description","forecastDay","date","day","weatherData","location","localtime","forecastDays","App","constructNewWeather","Date","toLocaleString","undefined","year","month","hour","hour12","minute","second","setCity","setDays","weather","setWeather","constructNewWeatherArray","search","c","get","then","resp","console","log","data","name","catch","error"],"mappings":"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","sourcesContent":["import './App.css';\nimport Container from './components/Container/Container';\nimport Input from './components/Input/Input';\n\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\nconst weatherApi = {\n\n  url: `https://api.weatherapi.com/v1/forecast.json`,\n  key: `9c1199b65355418b8fb150557211312`,\n  createUrl : function  (city,days) \n  {return `${this.url}?key=${this.key}&q=${city}&days=${days}`;}\n}\n\nfunction forecast(temp_celcius , tmep_fahrenheit ,icon , weather_description)\n{\n  //represents the temperature in celcius (example: 4.0)\n  this.temp_celcius = temp_celcius; // string\n  //represents the temperature in fahrenheit (example: 39.2)\n  this.tmep_fahrenheit = tmep_fahrenheit; // string\n  //represents the icon (example: //cdn.weatherapi.com/weather/64x64/night/122.png)\n  this.icon = icon; //string\n  //represents the weather description (example: Overcast)\n  this.weather_description = weather_description; //string\n}\n\nfunction forecastDay(date,day)\n{\n  //represents the date (example: 2021.12.14)\n  this.date = date; //string\n  //represents the current weather , an object(forecast object is used) with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n  this.day = day; //forecast object\n}\n\nfunction weatherData (location,localtime,forecastDays)\n{\n  //represents the location (example: Skopje/Macedonia ,Kumanovo/Macedonia , Tetovo/Macedonia)\n  this.location = location; // string\n  //represents the local date and time the request was made (example: 2021-12-14 22:09)\n  this.localtime = localtime; //string\n\n\n  //represents the current weather , an object(forecast object is used) with attributes : temp_celcius , tmep_fahrenheit ,icon , weather_description (example: 4.0,39.2,//cdn.weatherapi.com/weather/64x64/night/122.png,Overcast)  \n  // this.currentWeather = currentWeather; // forecast\n  //currentWeather = new forecast('no temp','no temp','','')\n\n\n  //represents an array of objects(forecastDay is used)  with attributes : date , an array of 24 objects called *days* (forecast object is used) with attributes : temp_celcius,temp_fahrenheit,time,icon,weather_description \n  this.forecastDays = forecastDays; // forecastDay object\n}\n\nfunction App() {\n  function constructNewWeather(location=\"Skopje\",localtime=`${new Date().toLocaleString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', hour12: false, minute:'2-digit', second:'2-digit'})}`,forecastDays = [new forecast('no temp','no temp','','')])\n  {\n    return  new weatherData \n  }\n\n  const [city,setCity] = useState(\"Skopje\");\n  const [days,setDays] = useState(1); \n  const [weather,setWeather] = useState(constructNewWeatherArray());\n\n  function search(c,days=1)\n  {\n    setCity(c);\n    setDays(days);\n    axios.get(weatherApi.createUrl(city,days)).then(\n      // data => setWeather({\n      // city: data.location.name,\n      // temp: data.current.temp_c\n    // }\n    resp => console.log(resp.data.location.name)\n    ).catch(error => {\n      console.log(error)\n    });\n  }\n\n\n\n  return (\n    <section className=\"App\">\n     <Input search={search}></Input>\n      <Container className=\"main\" list={weather}>\n      </Container>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}